@inherits ProCompontentBase
<AutoHeight Overflow>
    <HeaderContent>
        <div class="search-panel my-6">
            <MRow Class="flex-none fold d-inline-flex" NoGutters Style="@(_jobCreateType == JobCreateTypes.Manual?"width: calc(100% - 378px)":"width: calc(100% - 256px)")">
                <MCol Md="1" Style="min-width: 144px">
                    <Projects OnProjectChanged="OnProjectChangedAsync" TeamId="TeamId">
                    </Projects>
                </MCol>
                <MCol Md="3" Class="ml-6">
                    <SLabeledRadioGroup Value="_jobCreateType" ActiveClass="fill-background" Class="white" Dense TValue="JobCreateTypes" ValueChanged="SwitchJobCreateType">
                        @foreach (var item in Enum.GetValues<JobCreateTypes>())
                        {
                            <SLabeledRadio Value="item" Class="px-6">
                                <span class="@(_jobCreateType == item ? "subtitle2 emphasis2--text" : "btn regular2--text")">@T(nameof(JobCreateTypes)+"."+item)</span>
                            </SLabeledRadio>
                        }
                    </SLabeledRadioGroup>
                </MCol>
                <MSpacer></MSpacer>
                <MCol Md="@(_jobCreateType == JobCreateTypes.Manual?5:4)" Class="ml-6">
                    <DateTimeRangePicker @bind-StartTime="QueryStartTime" @bind-EndTime="QueryEndTime" OnChange="()=>OnQueryDataChanged()" />
                </MCol>
                <MCol Md="1" Class="ml-6">
                    <SSelect Small @bind-Value="QueryJobType"
                             Items="Enum.GetValues<JobTypes>().ToList()"
                             Label="@T("JobType")"
                             ItemText="e => T(e==default?string.Empty:e.ToString())"
                             ItemValue="e=> e"
                             BackgroundColor="white"
                             Class="rounded-2 body2">
                    </SSelect>
                </MCol>
                @if (_jobCreateType == JobCreateTypes.Api)
                {
                    <MCol Md="1" Class="ml-6">
                        <SSelect Small @bind-Value="QueryOrigin"
                             Items="_originList"
                             Label="@T("Origin")"
                             ItemText="e => e"
                             ItemValue="e=> e"
                             BackgroundColor="white"
                             Class="rounded-2 body2">
                        </SSelect>
                    </MCol>
                }
            </MRow>
            <div class="d-flex search-panel-right">
                <OutlinedSearchTextField @bind-Value="QueryJobName" BackgroundColor="white" PrependInnerIcon="@IconConstants.Search" />
                @if (_jobCreateType == JobCreateTypes.Manual)
                {
                    <SButton Small Color="primary" BorderRadiusClass="rounded-lg" Class="ml-6" OnClick="AddJob">@T("Add")</SButton>
                }
            </div>
        </div>
        <MRadioGroup @bind-Value="QueryStatus" Row OnClick="RadioGroupClickHandler">
            @foreach (KeyValuePair<string, TaskRunStatus> pair in _queryStatusList)
            {
                <MRadio TValue="TaskRunStatus" Value="pair.Value" Color="@ComputedStatusColor(pair.Value)">
                    <LabelContent>
                        <span style="color: @ComputedStatusColor(pair.Value)"> @T(pair.Key) </span>
                    </LabelContent>
                </MRadio>
            }
        </MRadioGroup>
    </HeaderContent>
    <AutoHeightContent>
        <MRow Class="mt-6" Style="height:0px">
            @foreach (var job in _jobs)
            {
                <MCol Md="6">
                    <MCard Height="115" Class="pt-2" OnClick="()=> HandleJobSelect(job)" Style="@($"border-radius:10px !important; {(job.Enabled?"":"opacity: 0.6")}")">
                        <MCardTitle>
                            <MChip Class="job-text btn"
                               TextColor="emphasis2"
                               Style="height:25px; background-color:#F0F3FA"
                               Label>
                                @T(job.JobType.ToString())
                            </MChip>
                            <div class="job-text job-name text-truncate emphasis2--text h7 ml-2">
                                @job.Name
                            </div>
                        </MCardTitle>
                        <MCardText Class="d-flex">
                            <MButton Icon XSmall Color="@GetJobColor(job)" Class="run-icon" Style="cursor:default">
                                <MIcon>mdi-checkbox-blank-circle</MIcon>
                            </MButton>
                            <div class="job-text run-text pl-2 body2" style="color:@(GetJobColor(job))">
                                @GetJobRunText(job)
                            </div>
                            <div class="d-flex px-1 mt-2" style="height: 8px">
                                <MDivider Vertical />
                            </div>
                            <div class="body2 regular3--text">@job.ModificationTime.Humanize(culture:LanguageProvider.Culture) </div>
                            <MSpacer></MSpacer>
                            @if (_jobCreateType == JobCreateTypes.Api)
                            {
                                <MChip Class="job-text emphasis2--text btn"
                               Style="height:25px; background-color:#F0F3FA">
                                    @job.Origin
                                </MChip>
                            }
                            @if (!string.IsNullOrWhiteSpace(job.UserName))
                            {
                                <MTooltip Top>
                                    <ActivatorContent>
                                        <MAvatar Size="24" @attributes="@context.Attrs" Class="ml-4">
                                            <MImage Src="@job.Avator"></MImage>
                                        </MAvatar>
                                    </ActivatorContent>
                                    <ChildContent>
                                        <span>@T("Owner"): @job.UserName</span>
                                    </ChildContent>
                                </MTooltip>
                            }
                            <MMenu Bottom Left>
                                <ActivatorContent>
                                    <MButton Icon @attributes="@context.Attrs" Width="24" Height="24" StopPropagation Class="ml-4">
                                        <MIcon>mdi-dots-vertical</MIcon>
                                    </MButton>
                                </ActivatorContent>
                                <ChildContent>
                                    <MList>
                                        @if (job.Enabled)
                                        {
                                            <MListItem Link OnClick="()=> RunJob(job)">
                                                <MListItemContent>
                                                    <MListItemTitle>
                                                        @T("Run")
                                                    </MListItemTitle>
                                                </MListItemContent>
                                            </MListItem>
                                        }
                                        <MListItem Link OnClick="()=> EditJob(job)">
                                            <MListItemContent>
                                                <MListItemTitle>
                                                    @T("Edit")
                                                </MListItemTitle>
                                            </MListItemContent>
                                        </MListItem>
                                        @if (job.Enabled)
                                        {
                                            <MListItem Link OnClick="()=> ShowDialog(ConfirmDialogTypes.DisabledJob, job.Id)">
                                                <MListItemContent>
                                                    <MListItemTitle>
                                                        @T("Disabled")
                                                    </MListItemTitle>
                                                </MListItemContent>
                                            </MListItem>
                                        }
                                        else
                                        {
                                            <MListItem Link OnClick="()=> ShowDialog(ConfirmDialogTypes.EnabledJob, job.Id)">
                                                <MListItemContent>
                                                    <MListItemTitle>
                                                        @T("Enabled")
                                                    </MListItemTitle>
                                                </MListItemContent>
                                            </MListItem>
                                        }

                                    </MList>
                                </ChildContent>
                            </MMenu>
                        </MCardText>
                    </MCard>
                </MCol>
            }
        </MRow>
    </AutoHeightContent>
    <FooterContent>
        <SPagination Class="mt-3 mx-6 pb-6" @bind-Page="Page" @bind-PageSize=PageSize Total="_total" />
    </FooterContent>
</AutoHeight>

<JobModal @ref="_jobModal" Project="Project" OnAfterDataChange="OnAfterDataChange"></JobModal>
<SSimpleDialog OkText="@T("Sure")" OnOk="OnSure" @bind-Value="_showConfirmDialog" Title="@_confirmTitle" HideCancel OkColor="#FF5252" OkClass="full-width scheduler-confirm-dialog-ok-button">
    <ChildContent>
        <span class="d-flex flex-column justify-center align-center" style="text-align:center">
            @_confirmMessage
        </span>
    </ChildContent>
</SSimpleDialog>