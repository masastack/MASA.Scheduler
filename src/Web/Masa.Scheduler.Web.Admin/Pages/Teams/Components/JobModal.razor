@inherits ProCompontentBase

<div @ref="Ref">
    <SheetDialog Value="_visible" ValueChanged="HandleVisibleChanged" Title="@(Model.Id == Guid.Empty? T("Job.Add") : T("Job.Update"))">
        <MStepper Value="_step" Class="sheetDialogPadding full-height">
            <MStepperItems Class="full-height">
                <MStepperContent Step="1" Class="full-height">
                    <MCard Class="full-height">
                        <MCardText Class="full-height" Style="overflow-y:auto;">
                            <MContainer Class="full-height pt-2">
                                <MRow>
                                    <MCol Cols="3" Offset="1">
                                        @T("PleaseSelectJobType")
                                    </MCol>
                                </MRow>
                                
                                <MRow Class="py-4" Style="height:90%" Align="AlignTypes.Center" Justify="JustifyTypes.Center">
                                    @foreach (var (key, value) in GetEnumMap<JobTypes>())
                                    {
                                        <MCol Cols="3" Class="full-height">
                                            <MCard Outlined Class="d-flex full-height justify-center align-center" Style="@GetStyle(value)" OnClick="()=> SelectJobType(value)">
                                                <MButton Ripple=false Plain OnClick="()=> SelectJobType(value)">@T(key)</MButton>
                                            </MCard>
                                        </MCol>
                                    }
                                </MRow>
                            </MContainer>
                        </MCardText>
                    </MCard>
                </MStepperContent>
                <MStepperContent Step="2">
                    <MForm Model=Model EnableValidation @ref="Form" Class="full-height">
                        <div class="full-height flex-column">
                            <div class="d-flex">
                                <div class="mx-auto text-center" style="width:212px;">
                                    <MTextField @bind-Value="@Model.Name" Class="mx-auto mt-0" Style="width:220px;" Label="@T("PleaseInputJobName")" HideDetails="@("auto")"/>
                                </div>
                            </div>
                            <div class="mt-2" style="overflow-y: auto;overflow-x: hidden;max-height: 740px;">
                                <div class="text-subtitle2 neutral-lighten-2--text">@T("BasicInformation")</div>
                                 <MRow Class="mt-1">
                                    @if (!_isAdd)
                                    {
                                        <MCol Cols="2">
                                            <MSelect @bind-Value="Model.JobType" Label="@T("JobType")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<JobTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                            </MSelect>
                                        </MCol>
                                    }
                                </MRow>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MTextField @bind-Value="Model.Owner" Label="@T("Owner")" HideDetails="@("auto")" Outlined Dense/>
                                    </MCol>
                                </MRow>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MSwitch @bind-Value="Model.IsAlertException" Label="@T("IsAlertException")" Style="padding-top: 0px; margin-top:0px;"></MSwitch>
                                    </MCol>
                                </MRow>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MSelect @bind-Value="Model.ScheduleType" Label="@T("ScheduleType")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<ScheduleTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                        </MSelect>
                                    </MCol>
                                    @if (Model.ScheduleType == ScheduleTypes.Cron)
                                    {
                                        <MCol Cols="2">
                                            <MTextField @bind-Value="Model.CronExpression" Label="@T("CronExpression")" Outlined Dense>
                                            </MTextField>
                                        </MCol>
                                    }
                                </MRow>
                                <div class="text-subtitle2 neutral-lighten-2--text mt-3">@T("RunStrategy")</div>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MSelect Value="Model.RoutingStrategy" ValueChanged="OnRoutingStrategyChanged" TValue="RoutingStrategyTypes" TItem="KeyValuePair<string, RoutingStrategyTypes>" TItemValue="RoutingStrategyTypes" Label="@T("RoutingStrategy")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<RoutingStrategyTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                        </MSelect>
                                    </MCol>
                                    @if (Model.RoutingStrategy == RoutingStrategyTypes.Specified)
                                    {
                                        <MCol Cols="2">
                                            <MSelect @bind-Value="Model.SpecifiedWorkerHost" Label="Worker" HideDetails="@("auto")" Dense Outlined Clearable Items="_workerList" ItemText="worker => worker.GetServiceUrl()" ItemValue="worker=> worker.GetServiceUrl()">
                                            </MSelect>
                                        </MCol>
                                    }
                                </MRow>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MSelect @bind-Value="Model.ScheduleExpiredStrategy" Label="@T("ScheduleExpiredStrategy")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<ScheduleExpiredStrategyTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                        </MSelect>
                                    </MCol>
                                    <MCol Cols="2">
                                        <MSelect @bind-Value="Model.ScheduleBlockStrategy" Label="@T("ScheduleBlockStrategy")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<ScheduleBlockStrategyTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                        </MSelect>
                                    </MCol>
                                </MRow>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MSelect @bind-Value="Model.RunTimeoutStrategy" Label="@T("RunTimeoutStrategy")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<RunTimeoutStrategyTypes>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                        </MSelect>
                                    </MCol>
                                    <MCol Cols="2">
                                        <MTextField @bind-Value="Model.RunTimeoutSecond" Type="number" NumberProps="(p)=>{ p.HideControl = true; p.Min=0; }" Label="@T("RunTimeoutSecond")" HideDetails="@("auto")" Dense Outlined />
                                    </MCol>
                                </MRow>
                                <div class="text-subtitle2 neutral-lighten-2--text mt-3">@T("FailedStrategy")</div>
                                <MRow Class="mt-1">
                                    <MCol Cols="2">
                                        <MButtonGroup Value="Model.FailedStrategy.ToString()" Class="rounded-lg elevation-tab" Group Tile Dense Mandatory Borderless>
                                            @foreach (var (key, value) in GetEnumMap<FailedStrategyTypes>())
                                            {
                                                <MButton OnClick="async() => await SwitchFailedStrategyType(value)" Value="@value.ToString()" Ripple=false Class="rounded-lg" MinWidth=100>
                                                    @T(key)
                                                </MButton>
                                            }
                                        </MButtonGroup>
                                    </MCol>
                                    @if (Model.FailedStrategy == FailedStrategyTypes.Auto)
                                    {
                                        <MCol Cols="2">
                                            <MTextField Type="number" NumberProps="(p)=>{ p.HideControl = true; p.Min=0; }" @bind-Value="Model.FailedRetryInterval" Label="@T("FailedRetryInterval")" HideDetails="@("auto")" Dense Outlined />
                                        </MCol>
                                        <MCol Cols="2">
                                            <MTextField Type="number" NumberProps="(p)=>{ p.HideControl = true; p.Min=0; }" @bind-Value="Model.FailedRetryCount" Label="@T("FailedRetryCount")" HideDetails="@("auto")" Dense Outlined />
                                        </MCol>
                                    }
                                </MRow>
                                <MRow>
                                    <MCol Cols="12">
                                        <MTextarea @bind-Value="Model.Description" Label="@T("Description")" HideDetails="@("auto")" Outlined />
                                    </MCol>
                                </MRow>
                            </div>
                            <div class="d-flex mt-2">
                                <MSpacer></MSpacer>
                                <MButton Outlined Color="primary" Class="small-button" OnClick="PreviousStep" Text>@T("PreviousStep")</MButton>
                                <MButton Color="primary" Class="small-button ml-6" OnClick="() => NextStep(context)">@T("NextStep")</MButton>
                            </div>
                        </div>
                    </MForm>
                </MStepperContent>
                <MStepperContent Step="3">
                    <div class="full-height flex-column">
                        <div class="mt-6 flex-height-auto overflow-y">
                            @if (Model.JobType == JobTypes.Http)
                            {
                                <MForm Model=Model.HttpConfig EnableValidation @ref="Form" Class="full-height">
                                    <MRow Class="mt-1">
                                        <MCol Cols="2">
                                            <MSelect @bind-Value="Model.HttpConfig.HttpMethod" Label="@T("HttpMethod")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<HttpMethods>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                            </MSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MTextField @bind-Value="Model.HttpConfig.RequestUrl" Label="@T("RequestUrl")" HideDetails="@("auto")" Dense Outlined />
                                        </MCol>
                                    </MRow>
                                    <div class="text-subtitle2 neutral-lighten-2--text mt-3">@T("RequestParameters")</div>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MButtonGroup Value="_httpParameterTypes.ToString()" Class="rounded-lg" Color="primary" Group Tile Dense Mandatory Borderless>
                                                @foreach (var (key, value) in GetEnumMap<HttpParameterTypes>())
                                                {
                                                    <MButton OnClick="async() => await SwitchHttpParameterType(value)" Value="@value.ToString()" Ripple=false Class="rounded-lg" MinWidth=100>
                                                        @T(key)
                                                    </MButton>
                                                }
                                            </MButtonGroup>
                                        </MCol>
                                    </MRow>
                                    @if (_httpParameterTypes == HttpParameterTypes.Parameter)
                                    {
                                        <DynamicKeyValueComponent @bind-Value="Model.HttpConfig.HttpParameters">
                                        </DynamicKeyValueComponent>
                                    }
                                    else if (_httpParameterTypes == HttpParameterTypes.Headers)
                                    {
                                        <DynamicKeyValueComponent @bind-Value="Model.HttpConfig.HttpHeaders">
                                        </DynamicKeyValueComponent>
                                    }
                                    else
                                    {
                                        <MRow Class="mt-2">
                                            <MCol Cols="12">
                                                <MTextarea @bind-Value="Model.HttpConfig.HttpBody" Label="@T("HttpBody")" HideDetails="@("auto")" Dense Outlined Rows="10">
                                                </MTextarea>
                                            </MCol>
                                        </MRow>
                                    }
                                    <MRow Class="mt-1">
                                        <MCol Cols="3">
                                            <MSelect @bind-Value="Model.HttpConfig.HttpVerifyType" Label="@T("HttpVerifyType")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<HttpVerifyTypes>()" ItemText="kv => kv.Key" ItemValue="kv=> kv.Value">
                                            </MSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="12">
                                            <MTextarea @bind-Value="Model.HttpConfig.VerifyContent" Label="@T("VerifyContent")" HideDetails="@("auto")" Dense Outlined Rows="10">
                                            </MTextarea>
                                        </MCol>
                                    </MRow>
                                    <div class="d-flex mt-6">
                                        <MSpacer></MSpacer>
                                        <MButton Outlined Color="primary" Class="small-button" OnClick="PreviousStep">@T("PreviousStep")</MButton>
                                        <MButton Color="primary" Class="small-button ml-6" OnClick="()=> Submit(context)">@T("Submit")</MButton>
                                    </div>
                                </MForm>
                            }
                            else if (Model.JobType == JobTypes.JobApp)
                            {
                                <MForm Model=Model.JobAppConfig EnableValidation @ref="Form" Class="full-height">
                                    <MRow Class="mt-1">
                                        <MCol Cols="3">
                                            <MSelect Value="Model.JobAppConfig.JobAppIdentity" TValue="string" TItem="ProjectAppDto" TItemValue="string" ValueChanged="OnJobAppChanged" Label="@T("JobAppId")" HideDetails="@("auto")" Dense Outlined Clearable Items="_jobApp" ItemText="app => app.Name" ItemValue="app=>app.Identity">
                                            </MSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MTextField @bind-Value="Model.JobAppConfig.JobEntryAssembly" Placeholder="*.dll" Label="@T("JobEntryAssembly")" HideDetails="@("auto")" Dense Outlined>
                                            </MTextField>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MTextField @bind-Value="Model.JobAppConfig.JobEntryClassName" Placeholder="Namespace.Class" Label="@T("JobEntryClass")" HideDetails="@("auto")" Outlined>
                                            </MTextField>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="12">
                                            <MTextarea @bind-Value="Model.JobAppConfig.JobParams" Label="@T("OptionParams")" HideDetails="@("auto")" Dense Outlined>
                                            </MTextarea>
                                        </MCol>
                                    </MRow>
                                    <div class="text-subtitle2 neutral-lighten-2--text mt-3">@T("ResourceVersion")</div>
                                    <MRow Class="mt-1">
                                        <MCol Cols="2">
                                            <MButtonGroup Value="_resourceVersionType.ToString()" Class="rounded-lg elevation-tab" Group Tile Dense Mandatory Borderless>
                                                @foreach (var (key, value) in GetEnumMap<ResourceVersionTypes>())
                                                {
                                                    <MButton OnClick="async() => await SwitchResourceVersionType(value)" Value="@value.ToString()" Ripple=false Class="rounded-lg" MinWidth=100>
                                                        @T(key)
                                                    </MButton>
                                                }
                                            </MButtonGroup>
                                        </MCol>
                                        @if (_resourceVersionType == ResourceVersionTypes.SpecifiedVersion)
                                        {
                                            <MCol Cols="2">
                                                <MSelect @bind-Value="Model.JobAppConfig.Version" Label="@T("ResourceVersion")" HideDetails="@("auto")" Dense Outlined Clearable Items="_versionList" ItemText="version => version" ItemValue="version=> version">
                                                </MSelect>
                                            </MCol>
                                        }
                                    </MRow>
                                    <div class="d-flex mt-6">
                                        <MSpacer></MSpacer>
                                        <MButton Outlined Color="primary" Class="small-button" OnClick="PreviousStep">@T("PreviousStep")</MButton>
                                        <MButton Color="primary" Class="small-button ml-6" OnClick="()=> Submit(context)">@T("Submit")</MButton>
                                    </div>
                                </MForm>
                            }
                            else if (Model.JobType == JobTypes.DaprServiceInvocation)
                            {
                                <MForm Model=Model.DaprServiceInvocationConfig EnableValidation @ref="Form" Class="full-height">
                                    <MRow Class="mt-1">
                                        <MCol Cols="3">
                                            <MSelect Value="Model.DaprServiceInvocationConfig.DaprServiceIdentity" TValue="string" TItemValue="string" TItem="ProjectAppDto"  ValueChanged="DaprServiceAppChange" Label="@T("DaprServiceAppId")" HideDetails="@("auto")" Dense Outlined Clearable Items="_serviceApp" ItemText="app => app.Name" ItemValue="app=>app.Identity">
                                            </MSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MTextField @bind-Value="Model.DaprServiceInvocationConfig.MethodName" Label="@T("MethodName")" HideDetails="@("auto")" Dense Outlined>
                                            </MTextField>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="4">
                                            <MSelect @bind-Value="Model.DaprServiceInvocationConfig.HttpMethod" Label="@T("HttpMethod")" HideDetails="@("auto")" Dense Outlined Clearable Items="GetEnumMap<HttpMethods>()" ItemText="kv => T(kv.Key)" ItemValue="kv=>kv.Value">
                                            </MSelect>
                                        </MCol>
                                    </MRow>
                                    <MRow Class="mt-1">
                                        <MCol Cols="12">
                                            <MTextarea @bind-Value="Model.DaprServiceInvocationConfig.Data" Label="@T("Data")" HideDetails="@("auto")" Dense Outlined Rows="10">
                                            </MTextarea>
                                        </MCol>
                                    </MRow>
                                    <div class="d-flex mt-6">
                                        <MSpacer></MSpacer>
                                        <MButton Outlined Color="primary" Class="small-button" OnClick="PreviousStep">@T("PreviousStep")</MButton>
                                        <MButton Color="primary" Class="small-button ml-6" OnClick="()=> Submit(context)">@T("Submit")</MButton>
                                    </div>
                                </MForm>
                            }
                        </div>
                    </div>
                </MStepperContent>
            </MStepperItems>
        </MStepper>
    </SheetDialog>
</div>